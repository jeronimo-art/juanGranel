"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloneAsCell = exports.cloneWithNewIds = void 0;
var types_1 = require("../types");
var createId_1 = require("./createId");
var mapNode_1 = require("./mapNode");
var cloneWithNewIds = function (node) {
    return (0, mapNode_1.mapNode)(node, {
        mapCell: function (n) { return (__assign(__assign({}, n), { 
            // clone data as well
            dataI18n: (n === null || n === void 0 ? void 0 : n.dataI18n) ? JSON.parse(JSON.stringify(n.dataI18n)) : {}, id: (0, createId_1.createId)() })); },
        mapRow: function (n) { return (__assign(__assign({}, n), { id: (0, createId_1.createId)() })); },
    });
};
exports.cloneWithNewIds = cloneWithNewIds;
var cloneAsCell = function (node) {
    var cell = (0, types_1.isRow)(node)
        ? {
            id: (0, createId_1.createId)(),
            rows: [node],
        }
        : node;
    return (0, exports.cloneWithNewIds)(cell);
};
exports.cloneAsCell = cloneAsCell;
//# sourceMappingURL=cloneWithNewIds.js.map