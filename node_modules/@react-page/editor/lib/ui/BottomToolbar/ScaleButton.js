"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScaleButton = void 0;
var core_1 = require("@material-ui/core");
var AspectRatio_1 = __importDefault(require("@material-ui/icons/AspectRatio"));
var react_1 = __importDefault(require("react"));
var hooks_1 = require("../../core/components/hooks");
var SCALING_FACTORS = [1, 0.8, 0.6, 1.2];
var lastScale = SCALING_FACTORS[0]; // poor mans redux
var ScaleButton = function (_a) {
    var scale = _a.scale, setScale = _a.setScale;
    var t = (0, hooks_1.useUiTranslator)().t;
    var toggleScale = react_1.default.useCallback(function () {
        var newScalingFactor = SCALING_FACTORS[(SCALING_FACTORS.indexOf(lastScale !== null && lastScale !== void 0 ? lastScale : scale) + 1) %
            SCALING_FACTORS.length];
        setScale(newScalingFactor);
        // poor man's redux
        lastScale = newScalingFactor;
    }, [scale, lastScale, setScale]);
    return (react_1.default.createElement(core_1.Tooltip, { title: t('Change size of this window') },
        react_1.default.createElement(core_1.IconButton, { onClick: toggleScale, "aria-label": "Change size of this window", color: "primary" },
            react_1.default.createElement(AspectRatio_1.default, null))));
};
exports.ScaleButton = ScaleButton;
//# sourceMappingURL=ScaleButton.js.map