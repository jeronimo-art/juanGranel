"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@material-ui/core");
var Translate_1 = __importDefault(require("@material-ui/icons/Translate"));
var react_1 = __importStar(require("react"));
var hooks_1 = require("../../core/components/hooks");
var DraftSwitch_1 = __importDefault(require("../DraftSwitch"));
var SelectLang_1 = __importDefault(require("./SelectLang"));
var I18nDialog = function (_a) {
    var _b;
    var nodeId = _a.nodeId, onClose = _a.onClose;
    var currentLang = (0, hooks_1.useLang)();
    var languages = (0, hooks_1.useOption)('languages');
    var t = (0, hooks_1.useUiTranslator)().t;
    var setLang = (0, hooks_1.useSetLang)();
    var dataI18n = (0, hooks_1.useCellDataI18nRaw)(nodeId);
    var updateCellData = (0, hooks_1.useUpdateCellData)(nodeId);
    var reset = (0, react_1.useCallback)(function (lang) {
        updateCellData(null, {
            lang: lang,
        });
    }, [updateCellData]);
    var defaultLangLabel = (_b = languages === null || languages === void 0 ? void 0 : languages[0]) === null || _b === void 0 ? void 0 : _b.label;
    return (react_1.default.createElement(core_1.DialogContent, null,
        react_1.default.createElement("div", { style: { display: 'flex', alignItems: 'center' } },
            react_1.default.createElement(Translate_1.default, { style: { marginRight: 'auto' } }),
            " ",
            react_1.default.createElement(SelectLang_1.default, null)),
        react_1.default.createElement("hr", null),
        react_1.default.createElement(core_1.Table, null,
            react_1.default.createElement("tbody", null, languages.map(function (l, index) {
                var data = dataI18n === null || dataI18n === void 0 ? void 0 : dataI18n[l.lang];
                var isCurrent = currentLang === l.lang;
                var hasData = Boolean(data);
                return (react_1.default.createElement("tr", { key: l.lang },
                    react_1.default.createElement("th", { style: {
                            textAlign: 'left',
                            textDecoration: isCurrent ? 'underline' : undefined,
                        } },
                        react_1.default.createElement(core_1.Button, { onClick: function () { return setLang(l.lang); } },
                            l.label,
                            " ",
                            index === 0 ? t('(default)') : null)),
                    react_1.default.createElement("td", null,
                        react_1.default.createElement(DraftSwitch_1.default, { nodeId: nodeId, lang: l.lang })),
                    react_1.default.createElement("td", null, hasData ? '✔️' : ' '),
                    react_1.default.createElement("td", null, hasData && index !== 0 ? (react_1.default.createElement(core_1.Button, { onClick: function () {
                            reset(l.lang);
                        } }, t("Reset to ".concat(defaultLangLabel, " \u26A0\uFE0F")))) : null)));
            }))),
        react_1.default.createElement(core_1.Button, { onClick: function () { return onClose(); } }, t('Close'))));
};
exports.default = I18nDialog;
//# sourceMappingURL=I18nDialog.js.map