"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var Fab_1 = __importDefault(require("@material-ui/core/Fab"));
var hooks_1 = require("../../../core/components/hooks");
var DisplayModeToggle = function (_a) {
    var description = _a.description, icon = _a.icon, onClick = _a.onClick, active = _a.active, disabled = _a.disabled, _b = _a.activeColor, activeColor = _b === void 0 ? 'secondary' : _b, style = _a.style, rest = __rest(_a, ["description", "icon", "onClick", "active", "disabled", "activeColor", "style"]);
    var isSmall = (0, hooks_1.useIsSmallScreen)();
    return (react_1.default.createElement("div", { className: "react-page-controls-mode-toggle-button", style: style },
        react_1.default.createElement("div", { className: "react-page-controls-mode-toggle-button-inner" },
            react_1.default.createElement(Fab_1.default, __assign({ color: active ? activeColor : 'default', size: isSmall ? 'small' : 'large', onClick: onClick, disabled: disabled }, rest), icon)),
        react_1.default.createElement("div", { className: "react-page-controls-mode-toggle-button-description" }, description)));
};
exports.default = DisplayModeToggle;
//# sourceMappingURL=index.js.map