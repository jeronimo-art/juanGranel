"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ZoomOut_1 = __importDefault(require("@material-ui/icons/ZoomOut"));
var ZoomIn_1 = __importDefault(require("@material-ui/icons/ZoomIn"));
var react_1 = __importDefault(require("react"));
var hooks_1 = require("../../../core/components/hooks");
var index_1 = __importDefault(require("../Button/index"));
var Zoom = function (_a) {
    var labelZoomIn = _a.labelZoomIn, labelZoomOut = _a.labelZoomOut;
    var canZoomIn = (0, hooks_1.useCanZoomIn)();
    var canZoomOut = (0, hooks_1.useCanZoomOut)();
    var zoomOut = (0, hooks_1.useZoomOut)();
    var zoomIn = (0, hooks_1.useZoomIn)();
    var isSmall = (0, hooks_1.useIsSmallScreen)();
    return (react_1.default.createElement("div", { style: {
            height: isSmall ? 56 : 80,
            float: 'right',
            display: 'flex',
            direction: 'ltr',
            transform: 'scale(1.2)',
        } },
        react_1.default.createElement("div", { style: {
                width: isSmall ? 29 : 36,
                overflow: 'hidden',
                marginRight: isSmall ? 1 : 2,
            } },
            react_1.default.createElement(index_1.default, { active: true, disabled: !canZoomIn, style: {
                    transform: "translateX(".concat(isSmall ? 27 : 35, "px)"),
                }, icon: react_1.default.createElement(ZoomIn_1.default, { style: { transform: "translateX(-".concat(isSmall ? 6 : 12, "px)") } }), description: labelZoomIn, onClick: zoomIn, activeColor: "default" })),
        react_1.default.createElement("div", { style: {
                width: isSmall ? 28 : 36,
                overflow: 'hidden',
                marginLeft: 1,
            } },
            react_1.default.createElement(index_1.default, { style: {
                    position: 'relative',
                    transform: 'translateX(1px)',
                }, active: true, disabled: !canZoomOut, icon: react_1.default.createElement(ZoomOut_1.default, { style: { transform: "translateX(".concat(isSmall ? 6 : 12, "px)") } }), description: labelZoomOut, onClick: zoomOut, activeColor: "default" }))));
};
exports.default = react_1.default.memo(Zoom);
//# sourceMappingURL=index.js.map