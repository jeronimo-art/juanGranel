"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var editor_1 = require("@react-page/editor");
var lodash_debounce_1 = __importDefault(require("lodash.debounce"));
var react_1 = __importStar(require("react"));
var slate_1 = require("slate");
var slate_react_1 = require("slate-react");
var withInline_1 = __importDefault(require("../slateEnhancer/withInline"));
var withPaste_1 = __importDefault(require("../slateEnhancer/withPaste"));
var DialogVisibleProvider_1 = __importDefault(require("./DialogVisibleProvider"));
var SlateProvider = function (props) {
    var data = props.data, plugins = props.plugins, children = props.children, defaultPluginType = props.defaultPluginType;
    var _a = __read((0, react_1.useState)(data === null || data === void 0 ? void 0 : data.slate), 2), value = _a[0], setValue = _a[1];
    var valueRef = (0, react_1.useRef)(value);
    valueRef.current = value;
    var editor = (0, react_1.useMemo)(function () {
        return (0, withPaste_1.default)(plugins, defaultPluginType)((0, slate_react_1.withReact)((0, withInline_1.default)(plugins)((0, slate_1.createEditor)())));
    }, []);
    var onChangeDebounced = (0, react_1.useCallback)((0, lodash_debounce_1.default)(function () {
        props.onChange({
            slate: valueRef.current,
            selection: editor.selection,
        }, {
            // mark as not undoable when state is same
            // that happens if only selection was changed
            notUndoable: (0, editor_1.deepEquals)(valueRef.current, data.slate),
        });
    }, 200), [props.onChange, editor, data.slate]);
    (0, react_1.useEffect)(function () {
        if (data.selection) {
            // update seleciton, if changed from outside (e.g. through undo)
            slate_1.Transforms.select(editor, data.selection);
        }
        else {
            // deselect, otherwise slate might throw an eerror if cursor is now on a non existing dom node
            slate_1.Transforms.deselect(editor);
        }
        setValue(data === null || data === void 0 ? void 0 : data.slate);
    }, [data === null || data === void 0 ? void 0 : data.slate, data === null || data === void 0 ? void 0 : data.selection]);
    var onChange = (0, react_1.useCallback)(function (v) {
        if (editor.selection) {
            setValue(v);
            onChangeDebounced();
        }
    }, [onChangeDebounced]);
    return (react_1.default.createElement(DialogVisibleProvider_1.default, null,
        react_1.default.createElement(slate_react_1.Slate, { editor: editor, value: value, onChange: onChange }, children)));
};
exports.default = SlateProvider;
//# sourceMappingURL=SlateProvider.js.map