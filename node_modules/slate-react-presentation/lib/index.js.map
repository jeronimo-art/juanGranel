{"version":3,"sources":["../src/index.js"],"names":["SlatePresentationContext","React","createContext","useSlatePresentation","useContext","isText","value","Object","text","isElement","Array","isArray","children","Element","element","renderElement","attributes","Leaf","leaf","renderLeaf","LeafWrapper","Children","map","child","i","SlateReactPresentation","props","DefaultElement","DefaultLeaf"],"mappings":";;;;;;;;;AAAA;;;;;;AAEA,IAAMA,wBAAwB,GAAGC,kBAAMC,aAAN,CAAoB,IAApB,CAAjC;;AAEA,SAASC,oBAAT,GAAgC;AAC5B,SAAOF,kBAAMG,UAAN,CAAiBJ,wBAAjB,CAAP;AACH;;AAED,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;AACnB;AACA,SAAOA,KAAK,YAAYC,MAAjB,IAA2B,OAAOD,KAAK,CAACE,IAAb,KAAsB,QAAxD;AACH;;AACD,SAASC,SAAT,CAAmBH,KAAnB,EAA0B;AACtB;AACA,SAAOA,KAAK,YAAYC,MAAjB,IAA2BG,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACM,QAApB,CAAlC;AACH;;AAED,SAASC,OAAT,OAAiD;AAAA,0BAA9BC,OAA8B;AAAA,MAA9BA,OAA8B,6BAApB;AAAEF,IAAAA,QAAQ,EAAE;AAAZ,GAAoB;;AAAA,8BACnBT,oBAAoB,EADD;AAAA,MACrCY,aADqC,yBACrCA,aADqC;;AAG7C,SAAO,gCAAC,iBAAD,CAAO,QAAP,QAAiBA,aAAa,CAAC;AAAEC,IAAAA,UAAU,EAAE,EAAd;AAAkBJ,IAAAA,QAAQ,EAAE,gCAAC,QAAD;AAAU,MAAA,QAAQ,EAAEE,OAAO,CAACF;AAA5B,MAA5B;AAAsEE,IAAAA,OAAO,EAAPA;AAAtE,GAAD,CAA9B,CAAP;AACH;;AAED,SAASG,IAAT,QAAuC;AAAA,yBAAvBC,IAAuB;AAAA,MAAvBA,IAAuB,2BAAhB;AAAEV,IAAAA,IAAI,EAAE;AAAR,GAAgB;;AAAA,+BACCL,oBAAoB,EADrB;AAAA,MAC3BgB,UAD2B,0BAC3BA,UAD2B;AAAA,MACfC,WADe,0BACfA,WADe;;AAGnC,SAAO,gCAAC,iBAAD,CAAO,QAAP,QAAiBD,UAAU,CAAC;AAAEH,IAAAA,UAAU,EAAE,EAAd;AAAkBJ,IAAAA,QAAQ,EAAE,gCAAC,WAAD,QAAcM,IAAI,CAACV,IAAnB,CAA5B;AAAoEU,IAAAA,IAAI,EAAJA,IAApE;AAA0EV,IAAAA,IAAI,EAAEU,IAAI,CAACV;AAArF,GAAD,CAA3B,CAAP;AACH;;AAED,SAASa,QAAT,QAAqC;AAAA,6BAAjBT,QAAiB;AAAA,MAAjBA,QAAiB,+BAAN,EAAM;AACjC,SACI,gCAAC,iBAAD,CAAO,QAAP,QACKA,QAAQ,CAACU,GAAT,CAAa,UAACC,KAAD,EAAQC,CAAR,EAAc;AACxB,QAAIf,SAAS,CAACc,KAAD,CAAb,EAAsB;AAClB,aAAO,gCAAC,OAAD;AAAS,QAAA,GAAG,EAAEC,CAAd;AAAiB,QAAA,OAAO,EAAED;AAA1B,QAAP;AACH,KAFD,MAEO;AACH,aAAO,gCAAC,IAAD;AAAM,QAAA,GAAG,EAAEC,CAAX;AAAc,QAAA,IAAI,EAAED;AAApB,QAAP;AACH;AACJ,GANA,CADL,CADJ;AAWH;;AAEM,SAASE,sBAAT,QAAgL;AAAA,0BAA9InB,KAA8I;AAAA,MAA9IA,KAA8I,4BAAtI,EAAsI;AAAA,kCAAlIS,aAAkI;AAAA,MAAlIA,aAAkI,oCAAlH,UAAAW,KAAK;AAAA,WAAI,gCAAC,cAAD,EAAoBA,KAApB,CAAJ;AAAA,GAA6G;AAAA,+BAA1EP,UAA0E;AAAA,MAA1EA,UAA0E,iCAA7D,UAAAO,KAAK;AAAA,WAAI,gCAAC,WAAD,EAAiBA,KAAjB,CAAJ;AAAA,GAAwD;AAAA,gCAAxBN,WAAwB;AAAA,MAAxBA,WAAwB,kCAAV,MAAU;AACnL,SACI,gCAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAE;AAAEL,MAAAA,aAAa,EAAbA,aAAF;AAAiBI,MAAAA,UAAU,EAAVA,UAAjB;AAA6BC,MAAAA,WAAW,EAAXA;AAA7B;AAA1C,KACI,gCAAC,QAAD;AAAU,IAAA,QAAQ,EAAEd;AAApB,IADJ,CADJ;AAKH;;AAED,SAASqB,cAAT,QAA+C;AAAA,MAArBf,QAAqB,SAArBA,QAAqB;AAAA,MAAXE,OAAW,SAAXA,OAAW;AAC3C,SAAO,6CAAMF,QAAN,CAAP;AACH;;AACD,SAASgB,WAAT,QAAyC;AAAA,MAAlBhB,QAAkB,SAAlBA,QAAkB;AAAA,MAARM,IAAQ,SAARA,IAAQ;AACrC,SAAO,8CAAON,QAAP,CAAP;AACH","sourcesContent":["import React, { useContext } from 'react';\n\nconst SlatePresentationContext = React.createContext(null);\n\nfunction useSlatePresentation() {\n    return React.useContext(SlatePresentationContext);\n}\n\nfunction isText(value) {\n    // TODO: maybe use 'is-plain-object' instead of instanceof Object\n    return value instanceof Object && typeof value.text === 'string';\n}\nfunction isElement(value) {\n    // TODO: maybe use 'is-plain-object' instead of instanceof Object\n    return value instanceof Object && Array.isArray(value.children);\n}\n\nfunction Element({ element = { children: [] } }) {\n    const { renderElement } = useSlatePresentation();\n\n    return <React.Fragment>{renderElement({ attributes: {}, children: <Children children={element.children} />, element })}</React.Fragment>;\n}\n\nfunction Leaf({ leaf = { text: '' } }) {\n    const { renderLeaf, LeafWrapper } = useSlatePresentation();\n\n    return <React.Fragment>{renderLeaf({ attributes: {}, children: <LeafWrapper>{leaf.text}</LeafWrapper>, leaf, text: leaf.text })}</React.Fragment>;\n}\n\nfunction Children({ children = [] }) {\n    return (\n        <React.Fragment>\n            {children.map((child, i) => {\n                if (isElement(child)) {\n                    return <Element key={i} element={child} />;\n                } else {\n                    return <Leaf key={i} leaf={child} />;\n                }\n            })}\n        </React.Fragment>\n    );\n}\n\nexport function SlateReactPresentation({ value = [], renderElement = props => <DefaultElement {...props} />, renderLeaf = props => <DefaultLeaf {...props} />, LeafWrapper = \"span\" }) {\n    return (\n        <SlatePresentationContext.Provider value={{ renderElement, renderLeaf, LeafWrapper }}>\n            <Children children={value} />\n        </SlatePresentationContext.Provider>\n    );\n}\n\nfunction DefaultElement({ children, element }) {\n    return <div>{children}</div>;\n}\nfunction DefaultLeaf({ children, leaf }) {\n    return <span>{children}</span>;\n}"],"file":"index.js"}