"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@material-ui/core");
const FormControlLabel_1 = tslib_1.__importDefault(require("@material-ui/core/FormControlLabel"));
const FormLabel_1 = tslib_1.__importDefault(require("@material-ui/core/FormLabel"));
const Radio_1 = tslib_1.__importDefault(require("@material-ui/core/Radio"));
const RadioGroup_1 = tslib_1.__importDefault(require("@material-ui/core/RadioGroup"));
const omit_1 = tslib_1.__importDefault(require("lodash/omit"));
const react_1 = tslib_1.__importDefault(require("react"));
const uniforms_1 = require("uniforms");
const wrapField_1 = tslib_1.__importDefault(require("./wrapField"));
function Radio(_a) {
    var _b, _c, _d;
    var { allowedValues, disabled, id, inputRef, label, name, onChange, readOnly, row, transform, value } = _a, props = tslib_1.__rest(_a, ["allowedValues", "disabled", "id", "inputRef", "label", "name", "onChange", "readOnly", "row", "transform", "value"]);
    const theme = core_1.useTheme();
    const formControlThemeProps = (_b = theme.props) === null || _b === void 0 ? void 0 : _b.MuiFormControl;
    return wrapField_1.default(Object.assign(Object.assign({ fullWidth: (_c = formControlThemeProps === null || formControlThemeProps === void 0 ? void 0 : formControlThemeProps.fullWidth) !== null && _c !== void 0 ? _c : true, margin: (_d = formControlThemeProps === null || formControlThemeProps === void 0 ? void 0 : formControlThemeProps.margin) !== null && _d !== void 0 ? _d : 'dense' }, props), { component: 'fieldset', disabled }), label && (react_1.default.createElement(FormLabel_1.default, { component: "legend", htmlFor: name }, label)), react_1.default.createElement(RadioGroup_1.default, { id: id, name: name, onChange: (event) => disabled || readOnly || onChange(event.target.value), ref: inputRef, row: row, value: value !== null && value !== void 0 ? value : '' }, allowedValues === null || allowedValues === void 0 ? void 0 : allowedValues.map(item => (react_1.default.createElement(FormControlLabel_1.default, { control: react_1.default.createElement(Radio_1.default, Object.assign({}, omit_1.default(uniforms_1.filterDOMProps(props), ['checkboxes', 'helperText']))), key: item, label: transform ? transform(item) : item, value: `${item}` })))));
}
exports.default = uniforms_1.connectField(Radio, { kind: 'leaf' });
